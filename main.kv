#:import ZBarCam zbarcam.ZBarCam
#:import ZBarSymbol pyzbar.pyzbar.ZBarSymbol
BoxLayout:
    orientation: 'vertical'
    padding: 20
    ZBarCam:
        id: zbarcam
        # optional, by default checks all types
        code_types: ZBarSymbol.QRCODE, ZBarSymbol.EAN13
        size: 500, 200
    Label:
        size: 500, 250
        text: ', '.join([str(symbol.data) for symbol in zbarcam.symbols])
        on_text:
            zbarcam.stop()
            display.text = app.signature(str(zbarcam.symbols[0].data))
        text_size: self.size
        bold: True
        width: 150
        halign: 'left'
        valign: 'middle'
        font_size: '18sp'
        color: 1, 1, 0, 1
        canvas.before:
            Color:
                rgba: 1, .1, 1, .5
            Rectangle:
                pos: self.pos
                size: self.size
    Label:
        id: display
        size: 500, 250
        text: 'signature: '
        text_size: self.size
        bold: True
        width: 150
        halign: 'center'
        valign: 'middle'
        font_size: '18sp'
        color: 1, 1, 0, 1
        canvas.before:
            Color:
                rgba: 1, 1, 1, .5
            Rectangle:
                pos: self.pos
                size: self.size
    Button:
        text: "open camera"
        text_size: self.size
        halign: 'center'
        valign: 'middle'
        font_size: '25sp'
        markup: True
        on_press: zbarcam.start()
    TextInput:
        id: username
        multiline: False
        halign:'center'
        cursor_width: 3
        text: 'name'
        on_text_validate: print(self.text);
    TextInput:
        id: password
        multiline: False
        halign:'center'
        cursor_width: 3
        text: 'password'
        on_text_validate: print(self.text);
    Button:
        text: "generate new key"
        on_press: app.add_key(username.text, password.text)
    Button:
        text: "show my keys"
        on_press: app.list_keys()
